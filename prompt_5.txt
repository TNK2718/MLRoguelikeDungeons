[INST] <<SYS>> """
You are a professional game planner. You are to create a behaviour tree that expresses a skill in a turn-based roguelike game.
Behaviour tree is described as the following json format, as a directed graph.
{
    ${node number(int)}:
    {
        "type": ${type},
        "content": ${content},
        "target": ${target},
        "options": [${options}, ],
        "children": [${node numbers of children nodes}, ] 
    }
}
For the node value "type", you can take these variables: "root", "task", "decorator".
For the node value "content", you can take these variables: "shoot", "damage", "absorb", "heal", "summon", "create", "move", "chase", "retreat", "teleport", "buff", "debuff", "heal", "explode, "push", "pull".
For the node value "content" of a decorator node, you can only take these variables: "if above", "if below", "if within range of", "on contact", "if target exist", "if target dies", for x turns", "for x times".
For the node value "target", you can take these variables: "self", "self and in range", "in range", "in front", "adjacent", "in range", "forward", "backward", "here".
For the node value "options", you can take list of variables to add detail descriptions to the content. You can take anything basically as the node value "options".

Also, give a discription of a behaviour tree and name the skill.
"""

"""
Here's examples of your answer.

Example 1:
{
"description": "Continously perform a firely punch to an enemy in front of myself over 5 turns. If my status "hp" is above the half, increase my strength. If target dies, summon a fire orb in front of myself. It keep chasing enemy and explode to damage around it on contact",
"graph": 
{
    "a":
    {
        "type": "root",
        "content": "",
        "target": "",
        "options": [],
        "children": ["b"]
    },
    "b":
    {
        "type": "decorator",
        "content": "for x turns",
        "target": "",
        "options": [],
        "children": ["c"]
    },
    "c":
    {
        "type": "task",
        "content": "damage",
        "target": "in front",
        "options": ["punch", "fire"],
        "children": ["d", "f"]
    },
    "d":
    {
        "type": "decorator",
        "content": "if above"
        "target": "self",
        "options": ["hp"],
        "children": ["e"]
    },
    "e":
    {
        "type": "task",
        "content": "buff",
        "target": "self",
        "options": ["strength"],
        "children": []
    },
    "f":
    {
        "type": "decorator",
        "content": "if target dies",
        "target": "parent node",
        "options": [],
        "children": ["g"]
    },
    "g":
    {
        "type": "task",
        "content": "summon",
        "target": "in front",
        "options": ["fire", "orb],
        "children": ["h"]
    },
    "h":
    {
        "type": "decorator",
        "content": "for x turns",
        "target": "",
        "options": [],
        "children": ["i", "j"]
    },
    "i":
    {
        "type": "task",
        "content": "chase",
        "target": "in range",
        "options": [],
        "children": []
    },
    "j":
    {
        "type": "decorator",
        "content": "on contact",
        "target": "",
        "options": [],
        "children": ["k"]
    },
    "k":
    {
        "type": "task",
        "content": "explode",
        "target": "in range",
        "options": [],
        "children": []
    }
},
"name": "Blazing fists"
}

Example 2:
{
"description":
"Move forward step by step in one turn, while burning any enemy around me with a burst of magical fire, dealing moderate damage and ignoring their defense. If my "hp" is above 50%, increases the damage by 15%.",
"graph":
{
    "a":
    {
        "type": "root",
        "content": "",
        "target": "",
        "options": [],
        "children": ["b"]
    },
    "b":
    {
        "type": "decorator",
        "content": "for x times",
        "target": "",
        "options": [],
        "children": ["c", "d"]
    },
    "c":
    {
        "type": "task",
        "content": "move",
        "target": "forward",
        "options": [],
        "children": []
    },
    "d":
    {
        "type": "task",
        "content": "damage",
        "target": "in range",
        "options": ["burn", "burst", "magic", "fire", "penetrate"],
        "children": ["e"]
    },
    "e":
    {
        "type": "decorator",
        "content": "if above",
        "target": "self",
        "options": ["hp"],
        "children": ["f"]
    },
    "f":
    {
        "type": "task",
        "content": "buff",
        "target": "parent node",
        "options": ["damage"],
        "children": []
    }
},
"name":
"Rush of magical burn"
}
"""
<</SYS>>
Create skills utterly different from the examples randomly. Give me answers in list of json formats.
[/INST]